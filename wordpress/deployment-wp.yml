apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wp
      tier: web # .spec.affinity 에 사용됨
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1 # 최대로 사용 불가능할 수 있는 파드 개수
      maxSurge: 2 # 최대 초과 생성 가능 파드 개수
  minReadySeconds: 20 # 파드의 최소 준비 시간
  template:
    metadata:
      name: nam-pod-wordpress
      labels:
        app: wp
        tier: web # .spec.affinity 에 사용됨
    spec:
      affinity:
       # tier: web 인 파드와는 떨어지고, tier: db 인 파드들은 가까이 하라 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: tier
                operator: In
                values:
                - web
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: tier
                  operator: In
                  values:
                  - db
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nam-con-wordpress
          image: wordpress:latest
          env:
            - name: WORDPRESS_DB_HOST
              value: "mysql-0.mysql" # headless에 의해 FQDN 으로 DB MASTER와 통신가능하게 되며, 마스터 DB에 쓰기작업 가능해짐
            - name: WORDPRESS_DB_USER # 이하 기본 셋팅 정보
              value: "wp-admin"
            - name: WORDPRESS_DB_PASSWORD
              value: "1234"
            - name: WORDPRESS_DB_NAME
              value: "wordpress"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: wp-vol
              mountPath: /var/www/html
            - name: ready-config
              mountPath: /var/www/html/isok # 컨피그맵의 key는 파일로 마운트
              subPath: isok # 서브패스를 지정해줘야 파일단위로 마운트 되므로 다른 콘텐츠 파일들이 덮어씌어지지 않음
          resources:
            requests:
              cpu: 500m
              memory: 200Mi
            limits:
              cpu: 1
              memory: 500Mi
          livenessProbe:
            exec:
              command: ['cat', '/var/www/html/isok'] #컨피그 맵으로 생성한 파일 확인
          readinessProbe:
            httpGet:
              port: 80
              path: /
      volumes:
        - name: wp-vol
          persistentVolumeClaim:
            claimName: wp-pvc
        # livenessprobe 에 사용될 configmap resource 볼륨 형태로 사용 
        - name: ready-config
          configMap:
            name: wpconfigmap

